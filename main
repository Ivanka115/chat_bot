import telebot
from telebot.types import Message
import random

bot = telebot.TeleBot("")

@bot.message_handler(commands = ["start"])
def start_cmd(message: Message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç. –ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é.")

@bot.message_handler(commands = ["about"])
def start_cmd(message: Message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –ò–≤–∞–Ω–∫–∞ - —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Python.")

@bot.message_handler(commands = ["coin"])
def coin_cmd(message: Message):
    x = random.randint(0, 1)
    if x == 0:
        bot.send_message(message.chat.id, "–í–∞–º –≤—ã–ø–∞–ª –æ—Ä—ë–ª!")
    else:
        bot.send_message(message.chat.id, "–í–∞–º –≤—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞!")

@bot.message_handler(commands = ["help"])
def help_cmd(message: Message):
    text = "<b>–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã: </b>\n" \
    "/start - <i>–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞</i>\n" \
    "/about - <i>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</i>\n" \
    "/coin - <i>–º–æ–Ω–µ—Ç–∫–∞</i>\n" \
    "/knb - <i>–ò–≥—Ä–∞ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞</i>\n" \
    "/dice - <i>–ë—Ä–æ—Å–∏—Ç—å –∏–≥—Ä–∞–ª—å–Ω—ã–π –∫—É–±–∏–∫</i>\n" \
    "/help - <i>–æ –∫–æ–º–∞–Ω–¥–µ</i>\n" \
    '<i>–¢–∞–∫–∂–µ –±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–ø—Ä–∏–≤–µ—Ç" –∏ "–ø–æ–∫–∞"</i>'

    bot.send_message(message.chat.id, text, parse_mode = "HTML")

@bot.message_handler(commands = ['knb'])
def knb_cmd(message: Message):
    bot.send_message(message.chat.id, "–ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞ (—á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É)")
    bot.register_next_step_handler(message, knb_game)

def knb_game(message: Message):
    text = message.text.lower()
    if text == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, "–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å–µ—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã")
        return
    if text not in ['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞']:
        bot.send_message(message.chat.id, "–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –∏–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã")
        return
    
    comp = random.choice(['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞'])

    if text == comp:
        bot.send_message(message.chat.id, "–ù–∏—á—å—è, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /knb")
        return
    elif (text == '–∫–∞–º–µ–Ω—å' and bot == '–Ω–æ–∂–Ω–∏—Ü—ã') or (text == '–Ω–æ–∂–Ω–∏—Ü—ã' and bot == '–±—É–º–∞–≥–∞') or (text == '–±—É–º–∞–≥–∞' and bot == '–∫–∞–º–µ–Ω—å'):
        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /knb")
        return
    else:
        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /knb")
        return
    
@bot.message_handler(commands=['dice'])
def dice_cmd(message: Message):
    value = random.randint(1, 6)
    bot.send_message(message.chat.id, f"üé≤ –ö—É–±–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: {value}")
    
@bot.message_handler(func = lambda message: message.text.lower() == '–ø—Ä–∏–≤–µ—Ç')
def hello_text(message: Message):
    bot.send_message(message.chat.id, "–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é.")

@bot.message_handler(func = lambda message: message.text.lower() == '–ø–æ–∫–∞')
def goodbye_text(message: Message):
    bot.send_message(message.chat.id, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å–∫–æ—Ä–µ–µ!")

bot.infinity_polling()
